cmake_minimum_required (VERSION 3.18.4)

project (Deep_Neural_Network)

#C++ Version to use in build.
set(CMAKE_CXX_STANDARD 20)

#Set default compile flags for GCC.
if(CMAKE_COMPILER_IS_GNUCXX)
	message(STATUS "GCC Detected!, adding compile flags!")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror -pedantic-errors")
endif(CMAKE_COMPILER_IS_GNUCXX)

file(GLOB SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
message(STATUS "Files: ${SOURCES}")

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/libs/Matrix/include)

add_subdirectory(libs/Matrix)
#add_subdirectory(src)

link_directories(${CMAKE_CURRENT_SOURCE_DIR}/libs/Matrix)

#target_include_directories(Matrix PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/libs/Matrix)
#target_link_directories(Matrix PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libs/Matrix)

#add_dependencies(Matrix)

add_executable(${PROJECT_NAME} ${SOURCES})

target_link_libraries(${PROJECT_NAME} PUBLIC Matrix)

#MACRO(HEADER_DIRECTORIES return_list)
#    FILE(GLOB_RECURSE new_list include/*.h)
#    SET(dir_list "")
#    FOREACH(file_path ${new_list})
#        GET_FILENAME_COMPONENT(dir_path ${file_path} PATH)
#        SET(dir_list ${dir_list} ${dir_path})
#    ENDFOREACH()
#    LIST(REMOVE_DUPLICATES dir_list)
#    SET(${return_list} ${dir_list})
#ENDMACRO()
    
#add_definitions("-std=c++2a")